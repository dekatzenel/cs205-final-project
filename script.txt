Parallel Tempering & TSP:
Parallel tempering is a simulation method that has its origins in statistical physics, but is also useful in solving optimization problems. One such problem is the Traveling Salesman problem, or TSP, which is NP-hard. The version of TSP we consider asks for the shortest path in a complete undirected weighted graph that visits every node exactly once and returns to the starting node. We used parallel tempering, implemented in parallel using Python multiprocessing, to generate approximate solutions to TSP in reasonable time.

Parallel Tempering:
Parallel tempering simulates several systems which explore the TSP graph and exchange information. Each system has a different temperature. Systems with higher temperatures explore a wide variety of paths, while systems with lower temperatures are more conservative. Exchanging information between systems combines the dynamic properties of high-temperature systems with the reliability of low-temperature systems and prevents getting caught in local minima.

Slide with Gif:
On the left is a 26-node TSP graph with more than 10^24 possible TSP paths. An empirical best path is in blue, and the current path is in red. On the right is the current best distance, as well as the empirical best distance. The current path moves around erratically and often increases in distance, but the best found path steadily improves. This run found a shortest path, and finished in about five minutes.

Performance Comparison:
Given a fixed number of iterations, parallel tempering produces a better result than simulated annealing, a similar algorithm with only one system running at a time. Furthermore, our parallel parallel tempering implementation running four threads shows speed improvements of 40-50% over serial.

[Show gif of best found path getting better, like the right half of the earlier gif]
Parallel tempering is also effective on larger graphs. On a graph of 280 nodes, with more than 10^564 possible paths, the parallelized algorithm gives a result within [hopefully small number]% of the optimal path in [hopefully not so many] minutes.